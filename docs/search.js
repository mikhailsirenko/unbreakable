window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"src": {"fullname": "src", "modulename": "src", "kind": "module", "doc": "<p></p>\n"}, "src.data": {"fullname": "src.data", "modulename": "src.data", "kind": "module", "doc": "<p></p>\n"}, "src.data.analyse": {"fullname": "src.data.analyse", "modulename": "src.data.analyse", "kind": "module", "doc": "<p></p>\n"}, "src.data.analyse.prepare_outcomes": {"fullname": "src.data.analyse.prepare_outcomes", "modulename": "src.data.analyse", "qualname": "prepare_outcomes", "kind": "function", "doc": "<p>Convert outcomes dict into a data frame.</p>\n\n<p>Args:\n    results (tuple): The results of the experiments in the EMA Workbench format.\n    add_policies (bool): Whether to add policy values to the data frame.\n    add_uncertainties (bool): Whether to add uncertainty values to the data frame.</p>\n\n<p>Returns:\n    pd.DataFrame: Outcomes data frame.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">results</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span>,</span><span class=\"param\">\t<span class=\"n\">add_policies</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">add_uncertainties</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.analyse.get_spatial_outcomes": {"fullname": "src.data.analyse.get_spatial_outcomes", "modulename": "src.data.analyse", "qualname": "get_spatial_outcomes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">outcomes</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">outcomes_of_interest</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Saint Lucia&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">aggregation</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mean&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">geopandas</span><span class=\"o\">.</span><span class=\"n\">geodataframe</span><span class=\"o\">.</span><span class=\"n\">GeoDataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.analyse.get_policy_effectiveness_tab": {"fullname": "src.data.analyse.get_policy_effectiveness_tab", "modulename": "src.data.analyse", "qualname": "get_policy_effectiveness_tab", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">outcomes</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare": {"fullname": "src.data.prepare", "modulename": "src.data.prepare", "kind": "module", "doc": "<p></p>\n"}, "src.data.prepare.prepare_asset_damage": {"fullname": "src.data.prepare.prepare_asset_damage", "modulename": "src.data.prepare", "qualname": "prepare_asset_damage", "kind": "function", "doc": "<p>Prepare district-level asset damage data and save it into a XLSX file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">scale</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">return_period</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.prepare_household_survey": {"fullname": "src.data.prepare.prepare_household_survey", "modulename": "src.data.prepare", "qualname": "prepare_household_survey", "kind": "function", "doc": "<p>Prepare data for the simulation model.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>country : str</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>ValueError\n    If the country is not supported.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.load_data": {"fullname": "src.data.prepare.load_data", "modulename": "src.data.prepare", "qualname": "load_data", "kind": "function", "doc": "<p>Load the raw data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">print_statistics</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.start_pipeline": {"fullname": "src.data.prepare.start_pipeline", "modulename": "src.data.prepare", "qualname": "start_pipeline", "kind": "function", "doc": "<p>Start the data processing pipeline.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "src.data.prepare.add_is_rural_column": {"fullname": "src.data.prepare.add_is_rural_column", "modulename": "src.data.prepare", "qualname": "add_is_rural_column", "kind": "function", "doc": "<p>Create a new column that indicates whether the household is rural or not.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">print_statistics</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.rename_assets_column": {"fullname": "src.data.prepare.rename_assets_column", "modulename": "src.data.prepare", "qualname": "rename_assets_column", "kind": "function", "doc": "<p>Rename the assets column to be more descriptive.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.rename_other_columns": {"fullname": "src.data.prepare.rename_other_columns", "modulename": "src.data.prepare", "qualname": "rename_other_columns", "kind": "function", "doc": "<p>Rename a set of columns. See function for details.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.calculate_household_attributes": {"fullname": "src.data.prepare.calculate_household_attributes", "modulename": "src.data.prepare", "qualname": "calculate_household_attributes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.get_bank_or_credit_union": {"fullname": "src.data.prepare.get_bank_or_credit_union", "modulename": "src.data.prepare", "qualname": "get_bank_or_credit_union", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.decode_demographic_attributes": {"fullname": "src.data.prepare.decode_demographic_attributes", "modulename": "src.data.prepare", "qualname": "decode_demographic_attributes", "kind": "function", "doc": "<p>Decode the demographic attributes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.decode_income_attributes": {"fullname": "src.data.prepare.decode_income_attributes", "modulename": "src.data.prepare", "qualname": "decode_income_attributes", "kind": "function", "doc": "<p>Decode the income-related attributes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.calculate_income_attributes": {"fullname": "src.data.prepare.calculate_income_attributes", "modulename": "src.data.prepare", "qualname": "calculate_income_attributes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.decode_housing_attributes": {"fullname": "src.data.prepare.decode_housing_attributes", "modulename": "src.data.prepare", "qualname": "decode_housing_attributes", "kind": "function", "doc": "<p>Decode the housing-related attributes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.add_housing_attributes": {"fullname": "src.data.prepare.add_housing_attributes", "modulename": "src.data.prepare", "qualname": "add_housing_attributes", "kind": "function", "doc": "<p>Introduce new housing attributes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.add_insurance_attributes": {"fullname": "src.data.prepare.add_insurance_attributes", "modulename": "src.data.prepare", "qualname": "add_insurance_attributes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.calculate_housing_attributes": {"fullname": "src.data.prepare.calculate_housing_attributes", "modulename": "src.data.prepare", "qualname": "calculate_housing_attributes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.calculate_poverty_attributes": {"fullname": "src.data.prepare.calculate_poverty_attributes", "modulename": "src.data.prepare", "qualname": "calculate_poverty_attributes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.assign_housing_vulnerability": {"fullname": "src.data.prepare.assign_housing_vulnerability", "modulename": "src.data.prepare", "qualname": "assign_housing_vulnerability", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.subset_columns": {"fullname": "src.data.prepare.subset_columns", "modulename": "src.data.prepare", "qualname": "subset_columns", "kind": "function", "doc": "<p>Subset columns of interest.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.check_columns": {"fullname": "src.data.prepare.check_columns", "modulename": "src.data.prepare", "qualname": "check_columns", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.add_missing_columns": {"fullname": "src.data.prepare.add_missing_columns", "modulename": "src.data.prepare", "qualname": "add_missing_columns", "kind": "function", "doc": "<p>Manually add missing columns to the data.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">missing_columns</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.merge_districts": {"fullname": "src.data.prepare.merge_districts", "modulename": "src.data.prepare", "qualname": "merge_districts", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.exponential_regression": {"fullname": "src.data.prepare.exponential_regression", "modulename": "src.data.prepare", "qualname": "exponential_regression", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">X_column</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">y_column</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">weights</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_model</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "src.data.prepare.polynomial_regression": {"fullname": "src.data.prepare.polynomial_regression", "modulename": "src.data.prepare", "qualname": "polynomial_regression", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">X_column</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">y_column</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">power</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">weights</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">X_new</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">X_start</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">X_end</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">X_num</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "src.data.prepare.linear_regression": {"fullname": "src.data.prepare.linear_regression", "modulename": "src.data.prepare", "qualname": "linear_regression", "kind": "function", "doc": "<p>Do a linear regression on the data and return the predicted values, the coefficient and the r2 score.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">X_column</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">y_column</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">weights</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_model</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "src.data.read": {"fullname": "src.data.read", "modulename": "src.data.read", "kind": "module", "doc": "<p></p>\n"}, "src.data.read.read_asset_damage": {"fullname": "src.data.read.read_asset_damage", "modulename": "src.data.read", "qualname": "read_asset_damage", "kind": "function", "doc": "<p>Read asset damage for all districts from a XLSX file and load it into the memory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">country</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.data.read.get_asset_damage": {"fullname": "src.data.read.get_asset_damage", "modulename": "src.data.read", "qualname": "get_asset_damage", "kind": "function", "doc": "<p>Get asset damage for a specific district.</p>\n\n<p>Args:\n    all_damage (pd.DataFrame): Asset damage data for all districts.\n    scale (str): Scale of the analysis. Only <code>district</code> is supported.\n    district (str): District name.\n    return_period (int): Return period.\n    print_statistics (bool): Print the statistics.</p>\n\n<p>Returns:\n    tuple: Event damage, total asset stock, expected loss fraction.</p>\n\n<p>Raises:\n    ValueError: If the scale is not <code>district</code>. <br />\n    ValueError: If the expected loss fraction is greater than 1.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">all_damage</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">scale</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">district</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">return_period</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">print_statistics</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.data.read.read_household_survey": {"fullname": "src.data.read.read_household_survey", "modulename": "src.data.read", "qualname": "read_household_survey", "kind": "function", "doc": "<p>Reads household survey from a CSV file.</p>\n\n<p>Args:\n    country (str): Country name.</p>\n\n<p>Returns:\n    pd.DataFrame: Household survey data.</p>\n\n<p>Raises:\n    ValueError: If the country is not <code>Saint Lucia</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.visualise": {"fullname": "src.data.visualise", "modulename": "src.data.visualise", "kind": "module", "doc": "<p></p>\n"}, "src.data.visualise.rainclouds": {"fullname": "src.data.visualise.rainclouds", "modulename": "src.data.visualise", "qualname": "rainclouds", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">outcomes</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">savefigs</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">x_columns</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">x_titles</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">plot_years_in_poverty</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">color_palette</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Set2&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">sharex</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "src.data.visualise.bivariate_choropleth": {"fullname": "src.data.visualise.bivariate_choropleth", "modulename": "src.data.visualise", "qualname": "bivariate_choropleth", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">x_name</span>, </span><span class=\"param\"><span class=\"n\">y_name</span>, </span><span class=\"param\"><span class=\"n\">x_label</span>, </span><span class=\"param\"><span class=\"n\">y_label</span>, </span><span class=\"param\"><span class=\"n\">scale</span>, </span><span class=\"param\"><span class=\"n\">figsize</span>, </span><span class=\"param\"><span class=\"n\">return_table</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "src.data.visualise.nine_quadrants_plot": {"fullname": "src.data.visualise.nine_quadrants_plot", "modulename": "src.data.visualise", "qualname": "nine_quadrants_plot", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">x_name</span>, </span><span class=\"param\"><span class=\"n\">y_name</span>, </span><span class=\"param\"><span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "src.data.visualise.get_colors": {"fullname": "src.data.visualise.get_colors", "modulename": "src.data.visualise", "qualname": "get_colors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "src.data.visualise.bin_data": {"fullname": "src.data.visualise.bin_data", "modulename": "src.data.visualise", "qualname": "bin_data", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">x_name</span>, </span><span class=\"param\"><span class=\"n\">y_name</span>, </span><span class=\"param\"><span class=\"n\">scale</span>, </span><span class=\"param\"><span class=\"n\">print_statistics</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "src.data.write": {"fullname": "src.data.write", "modulename": "src.data.write", "kind": "module", "doc": "<p></p>\n"}, "src.data.write.add_columns": {"fullname": "src.data.write.add_columns", "modulename": "src.data.write", "qualname": "add_columns", "kind": "function", "doc": "<p>Add columns/outcomes of interest from <code>affected households</code> to the <code>households</code> dataframe.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">affected_households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.data.write.get_outcomes": {"fullname": "src.data.write.get_outcomes", "modulename": "src.data.write", "qualname": "get_outcomes", "kind": "function", "doc": "<p>Calculate outcomes of interest from the simulation model.</p>\n\n<p>Args:\n    households (pd.DataFrame): Households data frame.\n    event_damage (float): Event damage.\n    total_asset_stock (float): Total asset stock.\n    expected_loss_fraction (float): Expected loss fraction.\n    average_productivity (float): Average productivity.\n    n_years (float): Number of years to consider for calculations (same as for optimization algorithm).</p>\n\n<p>Returns:\n    dict: Outcomes of interest.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">households</span>,</span><span class=\"param\">\t<span class=\"n\">event_damage</span>,</span><span class=\"param\">\t<span class=\"n\">total_asset_stock</span>,</span><span class=\"param\">\t<span class=\"n\">expected_loss_fraction</span>,</span><span class=\"param\">\t<span class=\"n\">average_productivity</span>,</span><span class=\"param\">\t<span class=\"n\">n_years</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "src.data.write.find_poor": {"fullname": "src.data.write.find_poor", "modulename": "src.data.write", "qualname": "find_poor", "kind": "function", "doc": "<p>Get the poor at the beginning of the simulation and the poor at the end of the simulation</p>\n\n<p>Args:\n    households (pd.DataFrame): Household dataframe\n    poverty_line (float): Poverty line</p>\n\n<p>Returns:\n    tuple: Number of poor at the beginning of the simulation, number of new poor at the end of the simulation, and the new poor dataframe</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">poverty_line</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">n_years</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.data.write.get_people_by_years_in_poverty": {"fullname": "src.data.write.get_people_by_years_in_poverty", "modulename": "src.data.write", "qualname": "get_people_by_years_in_poverty", "kind": "function", "doc": "<p>Get the number of people in poverty for each year in poverty.</p>\n\n<p>Args:\n    new_poor (pd.DataFrame): New poor dataframe</p>\n\n<p>Returns:\n    dict: Number of people in poverty for each year in poverty</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">new_poor</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "src.data.write.calculate_poverty_gap": {"fullname": "src.data.write.calculate_poverty_gap", "modulename": "src.data.write", "qualname": "calculate_poverty_gap", "kind": "function", "doc": "<p>Calculate the poverty gap at the beginning and at the end of the simulation.</p>\n\n<p>Args:\n    poor_initial (pd.DataFrame): Poor at the beginning of the simulation\n    new_poor (pd.DataFrame): New poor at the end of the simulation\n    poverty_line (float): Poverty line\n    n_years (int): Number of years of the optimization algorithm</p>\n\n<p>Returns:\n    tuple: Poverty gap at the beginning and at the end of the simulation</p>\n\n<p>Raises:\n    Exception: If the index is duplicated\n    Exception: If the poverty gap is greater than 1</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">poor_initial</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">new_poor</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">poverty_line</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">n_years</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.data.write.calculate_average_annual_consumption_loss": {"fullname": "src.data.write.calculate_average_annual_consumption_loss", "modulename": "src.data.write", "qualname": "calculate_average_annual_consumption_loss", "kind": "function", "doc": "<p>Get the average annual consumption loss and the average annual consumption loss as a percentage of average annual consumption.</p>\n\n<p>Args:\n    affected_households (pd.DataFrame): Affected households dataframe\n    n_years (int): Number of years of the optimization algorithm</p>\n\n<p>Returns:\n    tuple: Average annual consumption loss and average annual consumption loss as a percentage of average annual consumption</p>\n\n<p>Raises:\n    Exception: If the average annual consumption loss is greater than 1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">affected_households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>, </span><span class=\"param\"><span class=\"n\">n_years</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.data.write.calculate_resilience": {"fullname": "src.data.write.calculate_resilience", "modulename": "src.data.write", "qualname": "calculate_resilience", "kind": "function", "doc": "<p>Calculate the resilience of the affected households.</p>\n\n<p>Args:\n    affected_households (pd.DataFrame): Affected households dataframe\n    pml (float): Probable maximum loss</p>\n\n<p>Returns:\n    tuple: Resilience and number of times resilience is greater than 1</p>\n\n<p>Raises:\n    Exception: If the total consumption loss is 0</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">affected_households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>, </span><span class=\"param\"><span class=\"n\">pml</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.model": {"fullname": "src.model", "modulename": "src.model", "kind": "module", "doc": "<p></p>\n"}, "src.model.initialize_model": {"fullname": "src.model.initialize_model", "modulename": "src.model", "qualname": "initialize_model", "kind": "function", "doc": "<p>Initialize the model by reading household survey and asset damage files.</p>\n\n<p>Args:\n    country (str): Country name.\n    min_households (int): Minimum number of households that we need to have in a sample to be representative.</p>\n\n<p>Returns:\n    tuple: Household survey and asset damage files.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">min_households</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.model.run_model": {"fullname": "src.model.run_model", "modulename": "src.model", "qualname": "run_model", "kind": "function", "doc": "<p>Run the model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "src.modules": {"fullname": "src.modules", "modulename": "src.modules", "kind": "module", "doc": "<p></p>\n"}, "src.modules.households": {"fullname": "src.modules.households", "modulename": "src.modules.households", "kind": "module", "doc": "<p></p>\n"}, "src.modules.households.duplicate_households": {"fullname": "src.modules.households.duplicate_households", "modulename": "src.modules.households", "qualname": "duplicate_households", "kind": "function", "doc": "<p>Duplicates households if the number of households is less than <code>min_households</code> threshold.</p>\n\n<p>Args:\n    household_survey (pd.DataFrame): Household survey data.\n    min_households (int): Minimum number of households.</p>\n\n<p>Returns:\n    pd.DataFrame: Household survey data with duplicated households.</p>\n\n<p>Raises:\n    ValueError: If the total weights after duplication is not equal to the initial total weights.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">household_survey</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">min_households</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.modules.households.calculate_average_productivity": {"fullname": "src.modules.households.calculate_average_productivity", "modulename": "src.modules.households", "qualname": "calculate_average_productivity", "kind": "function", "doc": "<p>Calculate average productivity as aeinc \\ k_house_ae.</p>\n\n<p>Args:\n    households (pd.DataFrame): Household survey data.\n    print_statistics (bool, optional): Whether to print the average productivity. Defaults to False.</p>\n\n<p>Returns:\n    float: Average productivity.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>, </span><span class=\"param\"><span class=\"n\">print_statistics</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "src.modules.households.adjust_assets_and_expenditure": {"fullname": "src.modules.households.adjust_assets_and_expenditure", "modulename": "src.modules.households", "qualname": "adjust_assets_and_expenditure", "kind": "function", "doc": "<p>Adjust assets and expenditure of household to match data of asset damage file.</p>\n\n<p>There can be a mismatch between the data in the household survey and the of the asset damage.\nThe latest was created independently.</p>\n\n<p>Args:\n    households (pd.DataFrame): Household survey data.\n    total_asset_stock (float): Total asset stock.\n    poverty_line (float): Poverty line.\n    indigence_line (float): Indigence line.\n    print_statistics (bool, optional): Whether to print the statistics. Defaults to False.</p>\n\n<p>Returns:\n    pd.DataFrame: Household survey data with adjusted assets and expenditure.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">total_asset_stock</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">poverty_line</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">indigence_line</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">print_statistics</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.modules.households.calculate_pml": {"fullname": "src.modules.households.calculate_pml", "modulename": "src.modules.households", "qualname": "calculate_pml", "kind": "function", "doc": "<p>Calculate probable maximum loss as a product of population weight, effective capital stock and expected loss fraction.</p>\n\n<p>Args:\n    households (pd.DataFrame): Household survey data.\n    expected_loss_fraction (float): Expected loss fraction.\n    print_statistics (bool, optional): Whether to print the statistics. Defaults to False.</p>\n\n<p>Returns:\n    pd.DataFrame: Household survey data with probable maximum loss.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">expected_loss_fraction</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">print_statistics</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.modules.households.select_district": {"fullname": "src.modules.households.select_district", "modulename": "src.modules.households", "qualname": "select_district", "kind": "function", "doc": "<p>Select households for a specific district.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">household_survey</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">district</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.modules.households.estimate_savings": {"fullname": "src.modules.households.estimate_savings", "modulename": "src.modules.households", "qualname": "estimate_savings", "kind": "function", "doc": "<p>Estimate savings of households.</p>\n\n<p>We assume that savings are a product of expenditure and saving rate with Gaussian noise.</p>\n\n<p>Args:\n    households (pd.DataFrame): Household survey data for a specific district.\n    saving_rate (float): Saving rate.\n    estimate_savings_params (dict): Parameters for estimating savings function.</p>\n\n<p>Returns:\n    pd.DataFrame: Household survey data with estimated savings.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">saving_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">estimate_savings_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.modules.households.set_vulnerability": {"fullname": "src.modules.households.set_vulnerability", "modulename": "src.modules.households", "qualname": "set_vulnerability", "kind": "function", "doc": "<p>Set vulnerability of households.</p>\n\n<p>Vulnerability can be random or based on <code>v_init</code> with uniform noise.</p>\n\n<p>Args:\n    households (pd.DataFrame): Household survey data for a specific district.\n    is_vulnerability_random (bool): If True, vulnerability is random.</p>\n\n<p>Returns:\n    pd.DataFrame: Household survey data with assigned vulnerability.</p>\n\n<p>Raises:\n    ValueError: If the distribution is not supported.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">is_vulnerability_random</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">set_vulnerability_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.modules.households.calculate_exposure": {"fullname": "src.modules.households.calculate_exposure", "modulename": "src.modules.households", "qualname": "calculate_exposure", "kind": "function", "doc": "<p>Calculate exposure of households.</p>\n\n<p>Exposure is a function of poverty bias, effective capital stock, \nvulnerability and probable maximum loss.</p>\n\n<p>Args:\n    households (pd.DataFrame): Household survey data for a specific district.\n    poverty_bias (float): Poverty bias.\n    calculate_exposure_params (dict): Parameters for calculating exposure function.\n    print_statistics (bool): If True, print statistics.</p>\n\n<p>Returns:\n    pd.DataFrame: Household survey data with calculated exposure.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">poverty_bias</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">calculate_exposure_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">print_statistics</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.modules.households.determine_affected": {"fullname": "src.modules.households.determine_affected", "modulename": "src.modules.households", "qualname": "determine_affected", "kind": "function", "doc": "<p>Determines affected households.</p>\n\n<p>We assume that all households have the same probability of being affected, \nbut based on <code>fa</code> calculated in <code>calculate_exposure</code>.</p>\n\n<p>Args:\n    households (pd.DataFrame): Household survey data for a specific district.\n    determine_affected_params (dict): Parameters for determining affected households function.</p>\n\n<p>Returns:\n    tuple: Household survey data with determined affected households and asset loss for each household.</p>\n\n<p>Raises:\n    ValueError: If total asset is less than PML.\n    ValueError: If no mask was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">determine_affected_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.modules.households.apply_individual_policy": {"fullname": "src.modules.households.apply_individual_policy", "modulename": "src.modules.households", "qualname": "apply_individual_policy", "kind": "function", "doc": "<p>Apply a policy to a specific target group.</p>\n\n<p>Args:\n    households (pd.DataFrame): Household survey data for a specific district.\n    my_policy (str): Policy to apply. The structure of the policy is <code>target_group</code>+<code>top_up</code> in a single string. <code>target_group</code> can be <code>all</code>, <code>poor</code>, <code>poor_near_poor1.25</code>, <code>poor_near_poor2.0</code>, and the <code>top_up</code> 0, 10, 30 or 50.</p>\n\n<p>Returns:\n    tuple: Household survey data with applied policy and affected households.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>, </span><span class=\"param\"><span class=\"n\">my_policy</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.modules.optimize": {"fullname": "src.modules.optimize", "modulename": "src.modules.optimize", "kind": "module", "doc": "<p></p>\n"}, "src.modules.optimize.run_optimization": {"fullname": "src.modules.optimize.run_optimization", "modulename": "src.modules.optimize", "qualname": "run_optimization", "kind": "function", "doc": "<p>This function calculates the recovery rate for each affected household.</p>\n\n<p>Args:\n    affected_households (pd.DataFrame): A data frame containing the affected households.\n    consumption_utility (float): The coefficient of relative risk aversion.\n    discount_rate (float): The discount rate.\n    average_productivity (float): The average productivity.\n    optimization_timestep (float): The timestep for the optimization.\n    n_years (int): The number of years in the optimization algorithm.</p>\n\n<p>Returns:\n    pd.DataFrame: A data frame containing the affected households with the recovery rate.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">affected_households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">consumption_utility</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">discount_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">average_productivity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">optimization_timestep</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">n_years</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "src.modules.optimize.optimize_recovery_rate": {"fullname": "src.modules.optimize.optimize_recovery_rate", "modulename": "src.modules.optimize", "qualname": "optimize_recovery_rate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span>,</span><span class=\"param\">\t<span class=\"n\">optimization_results</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">consumption_utility</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">discount_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">average_productivity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">optimization_timestep</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">n_years</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "src.modules.optimize.integrate_wellbeing": {"fullname": "src.modules.optimize.integrate_wellbeing", "modulename": "src.modules.optimize", "qualname": "integrate_wellbeing", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">affected_households</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">consumption_utility</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">discount_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">income_and_expenditure_growth</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">average_productivity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">poverty_line</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">n_years</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">add_income_loss</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">cash_transfer</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"src": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.data": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.data.analyse": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.data.analyse.prepare_outcomes": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 62}, "src.data.analyse.get_spatial_outcomes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 110, "bases": 0, "doc": 3}, "src.data.analyse.get_policy_effectiveness_tab": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "src.data.prepare": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.data.prepare.prepare_asset_damage": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 16}, "src.data.prepare.prepare_household_survey": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 30}, "src.data.prepare.load_data": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 7}, "src.data.prepare.start_pipeline": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 8}, "src.data.prepare.add_is_rural_column": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 16}, "src.data.prepare.rename_assets_column": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 11}, "src.data.prepare.rename_other_columns": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 12}, "src.data.prepare.calculate_household_attributes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "src.data.prepare.get_bank_or_credit_union": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "src.data.prepare.decode_demographic_attributes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 7}, "src.data.prepare.decode_income_attributes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 8}, "src.data.prepare.calculate_income_attributes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "src.data.prepare.decode_housing_attributes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 8}, "src.data.prepare.add_housing_attributes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 7}, "src.data.prepare.add_insurance_attributes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "src.data.prepare.calculate_housing_attributes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "src.data.prepare.calculate_poverty_attributes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "src.data.prepare.assign_housing_vulnerability": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "src.data.prepare.subset_columns": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 7}, "src.data.prepare.check_columns": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "src.data.prepare.add_missing_columns": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 10}, "src.data.prepare.merge_districts": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "src.data.prepare.exponential_regression": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 132, "bases": 0, "doc": 3}, "src.data.prepare.polynomial_regression": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 199, "bases": 0, "doc": 3}, "src.data.prepare.linear_regression": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 138, "bases": 0, "doc": 21}, "src.data.read": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.data.read.read_asset_damage": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 19}, "src.data.read.get_asset_damage": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 94}, "src.data.read.read_household_survey": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 42}, "src.data.visualise": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.data.visualise.rainclouds": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 143, "bases": 0, "doc": 3}, "src.data.visualise.bivariate_choropleth": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "src.data.visualise.nine_quadrants_plot": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 3}, "src.data.visualise.get_colors": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "src.data.visualise.bin_data": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "src.data.write": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.data.write.add_columns": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 18}, "src.data.write.get_outcomes": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 74}, "src.data.write.find_poor": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 63}, "src.data.write.get_people_by_years_in_poverty": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 40}, "src.data.write.calculate_poverty_gap": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 96}, "src.data.write.calculate_average_annual_consumption_loss": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 78}, "src.data.write.calculate_resilience": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 52}, "src.model": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.model.initialize_model": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 53}, "src.model.run_model": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 6}, "src.modules": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.modules.households": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.modules.households.duplicate_households": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 69}, "src.modules.households.calculate_average_productivity": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 44}, "src.modules.households.adjust_assets_and_expenditure": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 100}, "src.modules.households.calculate_pml": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 65}, "src.modules.households.select_district": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 9}, "src.modules.households.estimate_savings": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 68}, "src.modules.households.set_vulnerability": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 72}, "src.modules.households.calculate_exposure": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 76}, "src.modules.households.determine_affected": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 95}, "src.modules.households.apply_individual_policy": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 99}, "src.modules.optimize": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.modules.optimize.run_optimization": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 111, "bases": 0, "doc": 91}, "src.modules.optimize.optimize_recovery_rate": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 3}, "src.modules.optimize.integrate_wellbeing": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 157, "bases": 0, "doc": 3}}, "length": 69, "save": true}, "index": {"qualname": {"root": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.prepare_household_survey": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.households.calculate_average_productivity": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.prepare.polynomial_regression": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.data.prepare.calculate_poverty_attributes": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"src.data.write.find_poor": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.start_pipeline": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"src.data.visualise.nine_quadrants_plot": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"src.modules.households.calculate_pml": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.data.prepare.rename_other_columns": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"src.data.prepare.get_bank_or_credit_union": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"src.modules.optimize.optimize_recovery_rate": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}, "src.data.prepare.get_bank_or_credit_union": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.visualise.get_colors": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"src.data.write.calculate_poverty_gap": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.subset_columns": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.start_pipeline": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.select_district": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.calculate_exposure": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}}, "df": 3, "s": {"docs": {"src.data.prepare.rename_assets_column": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.assign_housing_vulnerability": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}, "src.data.prepare.add_insurance_attributes": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}}, "df": 5}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.prepare.calculate_household_attributes": {"tf": 1}, "src.data.prepare.decode_demographic_attributes": {"tf": 1}, "src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.calculate_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}, "src.data.prepare.add_insurance_attributes": {"tf": 1}, "src.data.prepare.calculate_housing_attributes": {"tf": 1}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1}}, "df": 9}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"src.data.prepare.load_data": {"tf": 1}, "src.data.visualise.bin_data": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.decode_demographic_attributes": {"tf": 1}, "src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"src.data.prepare.decode_demographic_attributes": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.select_district": {"tf": 1}}, "df": 1, "s": {"docs": {"src.data.prepare.merge_districts": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.prepare.calculate_household_attributes": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}}, "df": 3, "s": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.data.prepare.decode_housing_attributes": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}, "src.data.prepare.calculate_housing_attributes": {"tf": 1}, "src.data.prepare.assign_housing_vulnerability": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.load_data": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"src.data.prepare.linear_regression": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}}, "df": 1}, "n": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.calculate_income_attributes": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.add_insurance_attributes": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"src.model.initialize_model": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"src.model.run_model": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.rename_assets_column": {"tf": 1}, "src.data.prepare.rename_other_columns": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.calculate_resilience": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.optimize.optimize_recovery_rate": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"src.data.visualise.rainclouds": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.optimize.optimize_recovery_rate": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.rename_assets_column": {"tf": 1}}, "df": 2, "s": {"docs": {"src.data.prepare.rename_other_columns": {"tf": 1}, "src.data.prepare.subset_columns": {"tf": 1}, "src.data.prepare.check_columns": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"src.data.visualise.get_colors": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.calculate_household_attributes": {"tf": 1}, "src.data.prepare.calculate_income_attributes": {"tf": 1}, "src.data.prepare.calculate_housing_attributes": {"tf": 1}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 10}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.get_bank_or_credit_union": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.data.prepare.check_columns": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"src.data.visualise.bivariate_choropleth": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"src.data.prepare.get_bank_or_credit_union": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.data.visualise.bivariate_choropleth": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"src.data.visualise.bin_data": {"tf": 1}}, "df": 1}}, "y": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.get_bank_or_credit_union": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.data.prepare.assign_housing_vulnerability": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.data.prepare.add_missing_columns": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.merge_districts": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"src.model.initialize_model": {"tf": 1}, "src.model.run_model": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.data.visualise.nine_quadrants_plot": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.data.visualise.nine_quadrants_plot": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"src.data.write.find_poor": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 1}}}}}}}}}}}, "fullname": {"root": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"src": {"tf": 1}, "src.data": {"tf": 1}, "src.data.analyse": {"tf": 1}, "src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}, "src.data.prepare": {"tf": 1}, "src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.start_pipeline": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.rename_assets_column": {"tf": 1}, "src.data.prepare.rename_other_columns": {"tf": 1}, "src.data.prepare.calculate_household_attributes": {"tf": 1}, "src.data.prepare.get_bank_or_credit_union": {"tf": 1}, "src.data.prepare.decode_demographic_attributes": {"tf": 1}, "src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.calculate_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}, "src.data.prepare.add_insurance_attributes": {"tf": 1}, "src.data.prepare.calculate_housing_attributes": {"tf": 1}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1}, "src.data.prepare.assign_housing_vulnerability": {"tf": 1}, "src.data.prepare.subset_columns": {"tf": 1}, "src.data.prepare.check_columns": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.prepare.merge_districts": {"tf": 1}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.visualise": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}, "src.data.visualise.bivariate_choropleth": {"tf": 1}, "src.data.visualise.nine_quadrants_plot": {"tf": 1}, "src.data.visualise.get_colors": {"tf": 1}, "src.data.visualise.bin_data": {"tf": 1}, "src.data.write": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.model": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.model.run_model": {"tf": 1}, "src.modules": {"tf": 1}, "src.modules.households": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.select_district": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 69}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.subset_columns": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.start_pipeline": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.select_district": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"src.data": {"tf": 1}, "src.data.analyse": {"tf": 1}, "src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}, "src.data.prepare": {"tf": 1}, "src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.prepare.load_data": {"tf": 1.4142135623730951}, "src.data.prepare.start_pipeline": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.rename_assets_column": {"tf": 1}, "src.data.prepare.rename_other_columns": {"tf": 1}, "src.data.prepare.calculate_household_attributes": {"tf": 1}, "src.data.prepare.get_bank_or_credit_union": {"tf": 1}, "src.data.prepare.decode_demographic_attributes": {"tf": 1}, "src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.calculate_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}, "src.data.prepare.add_insurance_attributes": {"tf": 1}, "src.data.prepare.calculate_housing_attributes": {"tf": 1}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1}, "src.data.prepare.assign_housing_vulnerability": {"tf": 1}, "src.data.prepare.subset_columns": {"tf": 1}, "src.data.prepare.check_columns": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.prepare.merge_districts": {"tf": 1}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.visualise": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}, "src.data.visualise.bivariate_choropleth": {"tf": 1}, "src.data.visualise.nine_quadrants_plot": {"tf": 1}, "src.data.visualise.get_colors": {"tf": 1}, "src.data.visualise.bin_data": {"tf": 1.4142135623730951}, "src.data.write": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}}, "df": 49}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.decode_demographic_attributes": {"tf": 1}, "src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"src.data.prepare.decode_demographic_attributes": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.select_district": {"tf": 1}}, "df": 1, "s": {"docs": {"src.data.prepare.merge_districts": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse": {"tf": 1}, "src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}}, "df": 3, "s": {"docs": {"src.data.prepare.rename_assets_column": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.assign_housing_vulnerability": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}, "src.data.prepare.add_insurance_attributes": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}}, "df": 5}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.prepare.calculate_household_attributes": {"tf": 1}, "src.data.prepare.decode_demographic_attributes": {"tf": 1}, "src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.calculate_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}, "src.data.prepare.add_insurance_attributes": {"tf": 1}, "src.data.prepare.calculate_housing_attributes": {"tf": 1}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1}}, "df": 9}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.prepare": {"tf": 1}, "src.data.prepare.prepare_asset_damage": {"tf": 1.4142135623730951}, "src.data.prepare.prepare_household_survey": {"tf": 1.4142135623730951}, "src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.start_pipeline": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.rename_assets_column": {"tf": 1}, "src.data.prepare.rename_other_columns": {"tf": 1}, "src.data.prepare.calculate_household_attributes": {"tf": 1}, "src.data.prepare.get_bank_or_credit_union": {"tf": 1}, "src.data.prepare.decode_demographic_attributes": {"tf": 1}, "src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.calculate_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}, "src.data.prepare.add_insurance_attributes": {"tf": 1}, "src.data.prepare.calculate_housing_attributes": {"tf": 1}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1}, "src.data.prepare.assign_housing_vulnerability": {"tf": 1}, "src.data.prepare.subset_columns": {"tf": 1}, "src.data.prepare.check_columns": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.prepare.merge_districts": {"tf": 1}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}}, "df": 27}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.households.calculate_average_productivity": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.prepare.polynomial_regression": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.data.prepare.calculate_poverty_attributes": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"src.data.write.find_poor": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.start_pipeline": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"src.data.visualise.nine_quadrants_plot": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"src.modules.households.calculate_pml": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.data.prepare.rename_other_columns": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"src.data.prepare.get_bank_or_credit_union": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.optimize": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1.4142135623730951}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}, "src.data.prepare.get_bank_or_credit_union": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.visualise.get_colors": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"src.data.write.calculate_poverty_gap": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.calculate_exposure": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.prepare.calculate_household_attributes": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}}, "df": 3, "s": {"docs": {"src.modules.households": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.select_district": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 11}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.data.prepare.decode_housing_attributes": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}, "src.data.prepare.calculate_housing_attributes": {"tf": 1}, "src.data.prepare.assign_housing_vulnerability": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.load_data": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"src.data.prepare.linear_regression": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}}, "df": 1}, "n": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.calculate_income_attributes": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.add_insurance_attributes": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"src.model.initialize_model": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"src.model.run_model": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.rename_assets_column": {"tf": 1}, "src.data.prepare.rename_other_columns": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"src.data.read": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1.4142135623730951}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1.4142135623730951}}, "df": 4}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.calculate_resilience": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.optimize.optimize_recovery_rate": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"src.data.visualise.rainclouds": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.optimize.optimize_recovery_rate": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.rename_assets_column": {"tf": 1}}, "df": 2, "s": {"docs": {"src.data.prepare.rename_other_columns": {"tf": 1}, "src.data.prepare.subset_columns": {"tf": 1}, "src.data.prepare.check_columns": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"src.data.visualise.get_colors": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.calculate_household_attributes": {"tf": 1}, "src.data.prepare.calculate_income_attributes": {"tf": 1}, "src.data.prepare.calculate_housing_attributes": {"tf": 1}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 10}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.get_bank_or_credit_union": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.data.prepare.check_columns": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"src.data.visualise.bivariate_choropleth": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"src.data.prepare.get_bank_or_credit_union": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.data.visualise.bivariate_choropleth": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"src.data.visualise.bin_data": {"tf": 1}}, "df": 1}}, "y": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.get_bank_or_credit_union": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.data.prepare.assign_housing_vulnerability": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.data.visualise": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}, "src.data.visualise.bivariate_choropleth": {"tf": 1}, "src.data.visualise.nine_quadrants_plot": {"tf": 1}, "src.data.visualise.get_colors": {"tf": 1}, "src.data.visualise.bin_data": {"tf": 1}}, "df": 6}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.data.prepare.add_missing_columns": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.merge_districts": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"src.model": {"tf": 1}, "src.model.initialize_model": {"tf": 1.4142135623730951}, "src.model.run_model": {"tf": 1.4142135623730951}}, "df": 3}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.modules": {"tf": 1}, "src.modules.households": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.select_district": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 16}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.data.visualise.nine_quadrants_plot": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.data.visualise.nine_quadrants_plot": {"tf": 1}}, "df": 1}}}}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"src.data.write.find_poor": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1}}, "df": 1}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"docs": {"src.data.prepare.polynomial_regression": {"tf": 1}}, "df": 1}, "1": {"0": {"0": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"9": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 2}, "src.data.visualise.rainclouds": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "4": {"0": {"docs": {"src.data.prepare.polynomial_regression": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"src.data.analyse.prepare_outcomes": {"tf": 6.855654600401044}, "src.data.analyse.get_spatial_outcomes": {"tf": 9.327379053088816}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 6.324555320336759}, "src.data.prepare.prepare_asset_damage": {"tf": 6.164414002968976}, "src.data.prepare.prepare_household_survey": {"tf": 4}, "src.data.prepare.load_data": {"tf": 5.830951894845301}, "src.data.prepare.start_pipeline": {"tf": 5.0990195135927845}, "src.data.prepare.add_is_rural_column": {"tf": 7.483314773547883}, "src.data.prepare.rename_assets_column": {"tf": 6.324555320336759}, "src.data.prepare.rename_other_columns": {"tf": 6.324555320336759}, "src.data.prepare.calculate_household_attributes": {"tf": 6.324555320336759}, "src.data.prepare.get_bank_or_credit_union": {"tf": 6.324555320336759}, "src.data.prepare.decode_demographic_attributes": {"tf": 6.324555320336759}, "src.data.prepare.decode_income_attributes": {"tf": 6.324555320336759}, "src.data.prepare.calculate_income_attributes": {"tf": 6.324555320336759}, "src.data.prepare.decode_housing_attributes": {"tf": 6.324555320336759}, "src.data.prepare.add_housing_attributes": {"tf": 6.324555320336759}, "src.data.prepare.add_insurance_attributes": {"tf": 6.324555320336759}, "src.data.prepare.calculate_housing_attributes": {"tf": 6.324555320336759}, "src.data.prepare.calculate_poverty_attributes": {"tf": 6.324555320336759}, "src.data.prepare.assign_housing_vulnerability": {"tf": 6.324555320336759}, "src.data.prepare.subset_columns": {"tf": 6.324555320336759}, "src.data.prepare.check_columns": {"tf": 6.324555320336759}, "src.data.prepare.add_missing_columns": {"tf": 7.0710678118654755}, "src.data.prepare.merge_districts": {"tf": 6.324555320336759}, "src.data.prepare.exponential_regression": {"tf": 10.246950765959598}, "src.data.prepare.polynomial_regression": {"tf": 12.529964086141668}, "src.data.prepare.linear_regression": {"tf": 10.488088481701515}, "src.data.read.read_asset_damage": {"tf": 3.4641016151377544}, "src.data.read.get_asset_damage": {"tf": 8.06225774829855}, "src.data.read.read_household_survey": {"tf": 5.291502622129181}, "src.data.visualise.rainclouds": {"tf": 10.723805294763608}, "src.data.visualise.bivariate_choropleth": {"tf": 6.164414002968976}, "src.data.visualise.nine_quadrants_plot": {"tf": 5.0990195135927845}, "src.data.visualise.get_colors": {"tf": 3.1622776601683795}, "src.data.visualise.bin_data": {"tf": 5.477225575051661}, "src.data.write.add_columns": {"tf": 7.874007874011811}, "src.data.write.get_outcomes": {"tf": 6.164414002968976}, "src.data.write.find_poor": {"tf": 6.855654600401044}, "src.data.write.get_people_by_years_in_poverty": {"tf": 5.291502622129181}, "src.data.write.calculate_poverty_gap": {"tf": 8.246211251235321}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 6}, "src.data.write.calculate_resilience": {"tf": 6}, "src.model.initialize_model": {"tf": 4.898979485566356}, "src.model.run_model": {"tf": 3.4641016151377544}, "src.modules.households.duplicate_households": {"tf": 7.0710678118654755}, "src.modules.households.calculate_average_productivity": {"tf": 6}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 8.774964387392123}, "src.modules.households.calculate_pml": {"tf": 7.681145747868608}, "src.modules.households.select_district": {"tf": 7.0710678118654755}, "src.modules.households.estimate_savings": {"tf": 7.681145747868608}, "src.modules.households.set_vulnerability": {"tf": 7.681145747868608}, "src.modules.households.calculate_exposure": {"tf": 8.246211251235321}, "src.modules.households.determine_affected": {"tf": 6.164414002968976}, "src.modules.households.apply_individual_policy": {"tf": 6}, "src.modules.optimize.run_optimization": {"tf": 9.273618495495704}, "src.modules.optimize.optimize_recovery_rate": {"tf": 8.888194417315589}, "src.modules.optimize.integrate_wellbeing": {"tf": 10.954451150103322}}, "df": 58, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.visualise.bivariate_choropleth": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 11}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}, "src.data.visualise.nine_quadrants_plot": {"tf": 1}, "src.data.visualise.bin_data": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.visualise.rainclouds": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.data.visualise.bivariate_choropleth": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1.4142135623730951}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1.4142135623730951}, "src.data.prepare.polynomial_regression": {"tf": 1.4142135623730951}, "src.data.prepare.linear_regression": {"tf": 1.4142135623730951}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.data.write.add_columns": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 6}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 4}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.data.prepare.polynomial_regression": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.data.visualise.rainclouds": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 1.4142135623730951}, "src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.start_pipeline": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1.4142135623730951}, "src.data.prepare.rename_assets_column": {"tf": 1.4142135623730951}, "src.data.prepare.rename_other_columns": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_household_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.get_bank_or_credit_union": {"tf": 1.4142135623730951}, "src.data.prepare.decode_demographic_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.decode_income_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_income_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.decode_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.add_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.add_insurance_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.assign_housing_vulnerability": {"tf": 1.4142135623730951}, "src.data.prepare.subset_columns": {"tf": 1.4142135623730951}, "src.data.prepare.check_columns": {"tf": 1.4142135623730951}, "src.data.prepare.add_missing_columns": {"tf": 1.4142135623730951}, "src.data.prepare.merge_districts": {"tf": 1.4142135623730951}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}, "src.data.write.add_columns": {"tf": 1.7320508075688772}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.select_district": {"tf": 1.4142135623730951}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1.4142135623730951}}, "df": 48}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.data.visualise.rainclouds": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.visualise.bin_data": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 8}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 4}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"src.data.visualise.rainclouds": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"src.data.write.calculate_resilience": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1.4142135623730951}, "src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1.7320508075688772}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 13}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1.4142135623730951}, "src.data.prepare.linear_regression": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"src.modules.households.calculate_exposure": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 1.4142135623730951}, "src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.start_pipeline": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1.4142135623730951}, "src.data.prepare.rename_assets_column": {"tf": 1.4142135623730951}, "src.data.prepare.rename_other_columns": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_household_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.get_bank_or_credit_union": {"tf": 1.4142135623730951}, "src.data.prepare.decode_demographic_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.decode_income_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_income_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.decode_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.add_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.add_insurance_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.assign_housing_vulnerability": {"tf": 1.4142135623730951}, "src.data.prepare.subset_columns": {"tf": 1.4142135623730951}, "src.data.prepare.check_columns": {"tf": 1.4142135623730951}, "src.data.prepare.add_missing_columns": {"tf": 1.4142135623730951}, "src.data.prepare.merge_districts": {"tf": 1.4142135623730951}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}, "src.data.write.add_columns": {"tf": 1.7320508075688772}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.select_district": {"tf": 1.4142135623730951}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1.4142135623730951}}, "df": 48}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.model.initialize_model": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1.4142135623730951}, "src.data.prepare.polynomial_regression": {"tf": 1.4142135623730951}, "src.data.prepare.linear_regression": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"src.data.visualise.rainclouds": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.calculate_exposure": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 1.4142135623730951}, "src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.start_pipeline": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1.4142135623730951}, "src.data.prepare.rename_assets_column": {"tf": 1.4142135623730951}, "src.data.prepare.rename_other_columns": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_household_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.get_bank_or_credit_union": {"tf": 1.4142135623730951}, "src.data.prepare.decode_demographic_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.decode_income_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_income_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.decode_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.add_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.add_insurance_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.assign_housing_vulnerability": {"tf": 1.4142135623730951}, "src.data.prepare.subset_columns": {"tf": 1.4142135623730951}, "src.data.prepare.check_columns": {"tf": 1.4142135623730951}, "src.data.prepare.add_missing_columns": {"tf": 1.4142135623730951}, "src.data.prepare.merge_districts": {"tf": 1.4142135623730951}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}, "src.data.write.add_columns": {"tf": 1.7320508075688772}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.select_district": {"tf": 1.4142135623730951}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1.4142135623730951}}, "df": 48}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1.4142135623730951}, "src.data.prepare.linear_regression": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1.4142135623730951}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.7320508075688772}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 2}, "src.modules.optimize.optimize_recovery_rate": {"tf": 2.23606797749979}, "src.modules.optimize.integrate_wellbeing": {"tf": 2.23606797749979}}, "df": 13}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"src.data.visualise.bivariate_choropleth": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"src.data.prepare.start_pipeline": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.rename_assets_column": {"tf": 1}, "src.data.prepare.rename_other_columns": {"tf": 1}, "src.data.prepare.calculate_household_attributes": {"tf": 1}, "src.data.prepare.get_bank_or_credit_union": {"tf": 1}, "src.data.prepare.decode_demographic_attributes": {"tf": 1}, "src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.calculate_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}, "src.data.prepare.add_insurance_attributes": {"tf": 1}, "src.data.prepare.calculate_housing_attributes": {"tf": 1}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1}, "src.data.prepare.assign_housing_vulnerability": {"tf": 1}, "src.data.prepare.subset_columns": {"tf": 1}, "src.data.prepare.check_columns": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.prepare.merge_districts": {"tf": 1}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.visualise.bivariate_choropleth": {"tf": 1}, "src.data.visualise.nine_quadrants_plot": {"tf": 1}, "src.data.visualise.get_colors": {"tf": 1}, "src.data.visualise.bin_data": {"tf": 1}}, "df": 26, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 1.4142135623730951}, "src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.start_pipeline": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1.4142135623730951}, "src.data.prepare.rename_assets_column": {"tf": 1.4142135623730951}, "src.data.prepare.rename_other_columns": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_household_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.get_bank_or_credit_union": {"tf": 1.4142135623730951}, "src.data.prepare.decode_demographic_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.decode_income_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_income_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.decode_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.add_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.add_insurance_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_housing_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1.4142135623730951}, "src.data.prepare.assign_housing_vulnerability": {"tf": 1.4142135623730951}, "src.data.prepare.subset_columns": {"tf": 1.4142135623730951}, "src.data.prepare.check_columns": {"tf": 1.4142135623730951}, "src.data.prepare.add_missing_columns": {"tf": 1.4142135623730951}, "src.data.prepare.merge_districts": {"tf": 1.4142135623730951}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}, "src.data.write.add_columns": {"tf": 1.7320508075688772}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.select_district": {"tf": 1.4142135623730951}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1.4142135623730951}}, "df": 48}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.modules.households.select_district": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1.4142135623730951}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}}, "df": 3}}}}}}}, "f": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1.4142135623730951}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}}, "df": 4, "t": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 2}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.write.calculate_poverty_gap": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.optimize.integrate_wellbeing": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1.4142135623730951}}, "df": 3}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.find_poor": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1.4142135623730951}, "src.data.prepare.linear_regression": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"src.data.visualise.bivariate_choropleth": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1.4142135623730951}, "src.data.prepare.prepare_asset_damage": {"tf": 1.4142135623730951}, "src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.prepare.exponential_regression": {"tf": 1.4142135623730951}, "src.data.prepare.polynomial_regression": {"tf": 1.4142135623730951}, "src.data.prepare.linear_regression": {"tf": 1.4142135623730951}, "src.data.read.get_asset_damage": {"tf": 1.4142135623730951}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.select_district": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 12}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.visualise.bin_data": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 8}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.polynomial_regression": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"src.data.visualise.rainclouds": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}}, "df": 1, "s": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.visualise.bivariate_choropleth": {"tf": 1}, "src.data.visualise.nine_quadrants_plot": {"tf": 1}, "src.data.visualise.bin_data": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "t": {"2": {"docs": {"src.data.visualise.rainclouds": {"tf": 1}}, "df": 1}, "docs": {"src.modules.households.set_vulnerability": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"src.data.visualise.rainclouds": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.select_district": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.data.prepare.add_missing_columns": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"src.model.initialize_model": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse.get_spatial_outcomes": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "t": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1.4142135623730951}, "src.data.prepare.linear_regression": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 7, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1.4142135623730951}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"src.data.prepare.polynomial_regression": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "y": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.visualise.bivariate_choropleth": {"tf": 1.4142135623730951}, "src.data.visualise.nine_quadrants_plot": {"tf": 1.4142135623730951}, "src.data.visualise.bin_data": {"tf": 1.4142135623730951}}, "df": 3}}}}, "x": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 2.23606797749979}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.visualise.rainclouds": {"tf": 1.4142135623730951}, "src.data.visualise.bivariate_choropleth": {"tf": 1.4142135623730951}, "src.data.visualise.nine_quadrants_plot": {"tf": 1}, "src.data.visualise.bin_data": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}}, "df": 8}, "y": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.visualise.bivariate_choropleth": {"tf": 1.4142135623730951}, "src.data.visualise.nine_quadrants_plot": {"tf": 1}, "src.data.visualise.bin_data": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"src.data.visualise.rainclouds": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 8}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.data.prepare.exponential_regression": {"tf": 1}, "src.data.prepare.polynomial_regression": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.polynomial_regression": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.data.write.get_outcomes": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.calculate_exposure": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.select_district": {"tf": 1}}, "df": 2, "s": {"docs": {"src.data.write.add_columns": {"tf": 1.4142135623730951}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}, "src.modules.optimize.integrate_wellbeing": {"tf": 1}}, "df": 17}}}}}}}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"src.model.run_model": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0}}, "doc": {"root": {"0": {"docs": {"src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}}, "df": 2}, "1": {"0": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}, "docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}}, "df": 4}, "2": {"5": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"0": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"src": {"tf": 1.7320508075688772}, "src.data": {"tf": 1.7320508075688772}, "src.data.analyse": {"tf": 1.7320508075688772}, "src.data.analyse.prepare_outcomes": {"tf": 3.4641016151377544}, "src.data.analyse.get_spatial_outcomes": {"tf": 1.7320508075688772}, "src.data.analyse.get_policy_effectiveness_tab": {"tf": 1.7320508075688772}, "src.data.prepare": {"tf": 1.7320508075688772}, "src.data.prepare.prepare_asset_damage": {"tf": 1.7320508075688772}, "src.data.prepare.prepare_household_survey": {"tf": 3.605551275463989}, "src.data.prepare.load_data": {"tf": 1.7320508075688772}, "src.data.prepare.start_pipeline": {"tf": 1.7320508075688772}, "src.data.prepare.add_is_rural_column": {"tf": 1.7320508075688772}, "src.data.prepare.rename_assets_column": {"tf": 1.7320508075688772}, "src.data.prepare.rename_other_columns": {"tf": 1.7320508075688772}, "src.data.prepare.calculate_household_attributes": {"tf": 1.7320508075688772}, "src.data.prepare.get_bank_or_credit_union": {"tf": 1.7320508075688772}, "src.data.prepare.decode_demographic_attributes": {"tf": 1.7320508075688772}, "src.data.prepare.decode_income_attributes": {"tf": 1.7320508075688772}, "src.data.prepare.calculate_income_attributes": {"tf": 1.7320508075688772}, "src.data.prepare.decode_housing_attributes": {"tf": 1.7320508075688772}, "src.data.prepare.add_housing_attributes": {"tf": 1.7320508075688772}, "src.data.prepare.add_insurance_attributes": {"tf": 1.7320508075688772}, "src.data.prepare.calculate_housing_attributes": {"tf": 1.7320508075688772}, "src.data.prepare.calculate_poverty_attributes": {"tf": 1.7320508075688772}, "src.data.prepare.assign_housing_vulnerability": {"tf": 1.7320508075688772}, "src.data.prepare.subset_columns": {"tf": 1.7320508075688772}, "src.data.prepare.check_columns": {"tf": 1.7320508075688772}, "src.data.prepare.add_missing_columns": {"tf": 1.7320508075688772}, "src.data.prepare.merge_districts": {"tf": 1.7320508075688772}, "src.data.prepare.exponential_regression": {"tf": 1.7320508075688772}, "src.data.prepare.polynomial_regression": {"tf": 1.7320508075688772}, "src.data.prepare.linear_regression": {"tf": 1.7320508075688772}, "src.data.read": {"tf": 1.7320508075688772}, "src.data.read.read_asset_damage": {"tf": 1.7320508075688772}, "src.data.read.get_asset_damage": {"tf": 4.795831523312719}, "src.data.read.read_household_survey": {"tf": 3.872983346207417}, "src.data.visualise": {"tf": 1.7320508075688772}, "src.data.visualise.rainclouds": {"tf": 1.7320508075688772}, "src.data.visualise.bivariate_choropleth": {"tf": 1.7320508075688772}, "src.data.visualise.nine_quadrants_plot": {"tf": 1.7320508075688772}, "src.data.visualise.get_colors": {"tf": 1.7320508075688772}, "src.data.visualise.bin_data": {"tf": 1.7320508075688772}, "src.data.write": {"tf": 1.7320508075688772}, "src.data.write.add_columns": {"tf": 2.6457513110645907}, "src.data.write.get_outcomes": {"tf": 3.872983346207417}, "src.data.write.find_poor": {"tf": 2.8284271247461903}, "src.data.write.get_people_by_years_in_poverty": {"tf": 2.8284271247461903}, "src.data.write.calculate_poverty_gap": {"tf": 3.605551275463989}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 3.3166247903554}, "src.data.write.calculate_resilience": {"tf": 3.3166247903554}, "src.model": {"tf": 1.7320508075688772}, "src.model.initialize_model": {"tf": 3.3166247903554}, "src.model.run_model": {"tf": 1.7320508075688772}, "src.modules": {"tf": 1.7320508075688772}, "src.modules.households": {"tf": 1.7320508075688772}, "src.modules.households.duplicate_households": {"tf": 4}, "src.modules.households.calculate_average_productivity": {"tf": 3.4641016151377544}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 4.123105625617661}, "src.modules.households.calculate_pml": {"tf": 3.4641016151377544}, "src.modules.households.select_district": {"tf": 1.7320508075688772}, "src.modules.households.estimate_savings": {"tf": 3.872983346207417}, "src.modules.households.set_vulnerability": {"tf": 4.358898943540674}, "src.modules.households.calculate_exposure": {"tf": 4}, "src.modules.households.determine_affected": {"tf": 4.58257569495584}, "src.modules.households.apply_individual_policy": {"tf": 5.0990195135927845}, "src.modules.optimize": {"tf": 1.7320508075688772}, "src.modules.optimize.run_optimization": {"tf": 3.872983346207417}, "src.modules.optimize.optimize_recovery_rate": {"tf": 1.7320508075688772}, "src.modules.optimize.integrate_wellbeing": {"tf": 1.7320508075688772}}, "df": 69, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.data.write.get_outcomes": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.write.calculate_average_annual_consumption_loss": {"tf": 2.6457513110645907}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1.4142135623730951}, "src.data.read.read_household_survey": {"tf": 1.7320508075688772}, "src.model.initialize_model": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.rename_assets_column": {"tf": 1}}, "df": 2, "s": {"docs": {"src.data.prepare.rename_other_columns": {"tf": 1}, "src.data.prepare.subset_columns": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}}, "df": 3, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.write.add_columns": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.linear_regression": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}}, "df": 1, "d": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"src.data.read.read_household_survey": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 7, "d": {"docs": {"src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 2}, "s": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"src.data.write.get_outcomes": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.modules.households.calculate_exposure": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1.4142135623730951}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "f": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.prepare.rename_other_columns": {"tf": 1}, "src.data.prepare.subset_columns": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1.7320508075688772}, "src.data.write.find_poor": {"tf": 2.449489742783178}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1.4142135623730951}, "src.data.write.calculate_poverty_gap": {"tf": 2.449489742783178}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 2}, "src.data.write.calculate_resilience": {"tf": 1.4142135623730951}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.7320508075688772}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 21}, "r": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 3}, "n": {"docs": {"src.data.prepare.linear_regression": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}}, "df": 3}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 6}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 2.23606797749979}, "src.modules.households.select_district": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 8, "s": {"docs": {"src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 2}, "src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.start_pipeline": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 2}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1.4142135623730951}, "src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 20, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1.7320508075688772}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1.4142135623730951}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1.4142135623730951}, "src.data.write.calculate_resilience": {"tf": 1.4142135623730951}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 20}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 2}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.model.initialize_model": {"tf": 1.4142135623730951}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.rename_assets_column": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"src.data.prepare.rename_other_columns": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1, "s": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}, "d": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.decode_demographic_attributes": {"tf": 1}, "src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"src.data.prepare.decode_demographic_attributes": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {"src.data.prepare.linear_regression": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.data.write.calculate_poverty_gap": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}}, "df": 2}, "s": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 2}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 7, "t": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 6, "o": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.add_housing_attributes": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.subset_columns": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"src.data.write.calculate_poverty_gap": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.decode_income_attributes": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.write.calculate_poverty_gap": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"src.model.initialize_model": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}}, "df": 2}, "f": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1.4142135623730951}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1.4142135623730951}}, "df": 10}, "s": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1.7320508075688772}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1.4142135623730951}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.7320508075688772}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 12}}, "a": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.rename_other_columns": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1.4142135623730951}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.select_district": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 2}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 19, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 20}}, "e": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 2}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}}, "df": 3}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1.7320508075688772}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.model.initialize_model": {"tf": 1.4142135623730951}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 2}, "src.modules.households.determine_affected": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"src.data.prepare.rename_assets_column": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 1.4142135623730951}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.write.find_poor": {"tf": 1.4142135623730951}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1.4142135623730951}, "src.data.write.calculate_resilience": {"tf": 1}, "src.model.initialize_model": {"tf": 1.4142135623730951}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.7320508075688772}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}}, "df": 14}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.write.calculate_average_annual_consumption_loss": {"tf": 2.6457513110645907}}, "df": 1}}}}}, "t": {"docs": {"src.data.write.find_poor": {"tf": 2}, "src.data.write.calculate_poverty_gap": {"tf": 2.449489742783178}}, "df": 2, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.prepare.decode_demographic_attributes": {"tf": 1}, "src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}}, "df": 4}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 4}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 4}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.data.write.add_columns": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1.4142135623730951}, "src.data.write.calculate_resilience": {"tf": 1.7320508075688772}, "src.modules.households.determine_affected": {"tf": 2.23606797749979}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 2}}, "df": 6}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 2.6457513110645907}, "src.modules.households.calculate_average_productivity": {"tf": 1.7320508075688772}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"src.modules.households.calculate_average_productivity": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"src.modules.households.calculate_average_productivity": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 2}, "src.data.write.get_outcomes": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 3}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.read.get_asset_damage": {"tf": 1.4142135623730951}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.prepare.rename_other_columns": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1.4142135623730951}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1.4142135623730951}, "src.modules.households.select_district": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1.7320508075688772}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 13, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 4, "s": {"docs": {"src.model.initialize_model": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.rename_other_columns": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 5}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"src.data.write.get_outcomes": {"tf": 2.23606797749979}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.7320508075688772}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 2}}, "df": 10}}}}, "a": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}}, "df": 3}}}}}, "r": {"2": {"docs": {"src.data.prepare.linear_regression": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.calculate_resilience": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.linear_regression": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 20}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.rename_assets_column": {"tf": 1}, "src.data.prepare.rename_other_columns": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.linear_regression": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"src.data.read.read_asset_damage": {"tf": 1}}, "df": 1, "s": {"docs": {"src.data.read.read_household_survey": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.model.initialize_model": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.model.initialize_model": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 9}}}}, "w": {"docs": {"src.data.prepare.load_data": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.estimate_savings": {"tf": 1.7320508075688772}, "src.modules.optimize.run_optimization": {"tf": 2}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"src.model.run_model": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 9}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 2.23606797749979}, "src.data.prepare.prepare_household_survey": {"tf": 1.4142135623730951}, "src.data.prepare.load_data": {"tf": 1}, "src.data.prepare.start_pipeline": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.rename_assets_column": {"tf": 1}, "src.data.prepare.decode_demographic_attributes": {"tf": 1}, "src.data.prepare.decode_income_attributes": {"tf": 1}, "src.data.prepare.decode_housing_attributes": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.prepare.linear_regression": {"tf": 2}, "src.data.read.read_asset_damage": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 2}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 3.3166247903554}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 3.7416573867739413}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 2}, "src.data.write.calculate_resilience": {"tf": 1.7320508075688772}, "src.model.initialize_model": {"tf": 1}, "src.model.run_model": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.7320508075688772}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 2.449489742783178}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1.7320508075688772}, "src.modules.optimize.run_optimization": {"tf": 3.3166247903554}}, "df": 31, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 4}, "n": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 2}, "src.data.prepare.rename_assets_column": {"tf": 1}, "src.data.prepare.add_missing_columns": {"tf": 1}, "src.data.write.add_columns": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.model.initialize_model": {"tf": 1.4142135623730951}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1.4142135623730951}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.7320508075688772}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}}, "df": 11, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 6}}}, "p": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.write.calculate_resilience": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.data.read.get_asset_damage": {"tf": 1.4142135623730951}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 1.7320508075688772}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.estimate_savings": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.calculate_exposure": {"tf": 2.23606797749979}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}}, "df": 3}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"src.data.write.find_poor": {"tf": 1.4142135623730951}, "src.data.write.calculate_poverty_gap": {"tf": 1.7320508075688772}}, "df": 2}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 3}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.estimate_savings": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1.4142135623730951}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}}, "df": 5}}}}}}, "e": {"docs": {"src.model.initialize_model": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.calculate_pml": {"tf": 1}}, "df": 1, "s": {"docs": {"src.modules.households.duplicate_households": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 9}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 2.23606797749979}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"1": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}, "2": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}, "docs": {"src.data.write.find_poor": {"tf": 2.23606797749979}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1.4142135623730951}, "src.data.write.calculate_poverty_gap": {"tf": 2}, "src.modules.households.apply_individual_policy": {"tf": 1.7320508075688772}}, "df": 4}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.data.write.find_poor": {"tf": 1.4142135623730951}, "src.data.write.get_people_by_years_in_poverty": {"tf": 2}, "src.data.write.calculate_poverty_gap": {"tf": 2.23606797749979}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.7320508075688772}}, "df": 5}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.modules.households.calculate_pml": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 19}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.prepare.prepare_household_survey": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.linear_regression": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.data.prepare.start_pipeline": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1.7320508075688772}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.data.read.get_asset_damage": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1.4142135623730951}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.start_pipeline": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"src.data.read.get_asset_damage": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.calculate_average_annual_consumption_loss": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1.4142135623730951}, "src.data.read.get_asset_damage": {"tf": 1}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 7}}}, "e": {"docs": {"src.data.prepare.rename_assets_column": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 5, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.data.write.find_poor": {"tf": 1.4142135623730951}, "src.data.write.calculate_poverty_gap": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"src.model.initialize_model": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"src.modules.households.calculate_exposure": {"tf": 1.7320508075688772}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}}, "v": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1.4142135623730951}, "src.data.prepare.linear_regression": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1.4142135623730951}, "src.data.read.read_household_survey": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.households.set_vulnerability": {"tf": 2.23606797749979}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"src.data.analyse.prepare_outcomes": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"src.modules.households.set_vulnerability": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.modules.optimize.run_optimization": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.load_data": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"src.data.read.get_asset_damage": {"tf": 1.4142135623730951}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 2.23606797749979}, "src.data.write.calculate_resilience": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 2.23606797749979}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 7}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.find_poor": {"tf": 1.4142135623730951}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 2}}, "df": 3, "a": {"docs": {}, "df": 0, "r": {"docs": {"src.data.prepare.linear_regression": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"src.data.read.read_household_survey": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.modules.households.estimate_savings": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"src.modules.households.estimate_savings": {"tf": 2.23606797749979}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.data.read.read_household_survey": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.model.initialize_model": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 2}, "src.data.write.calculate_poverty_gap": {"tf": 2}}, "df": 4}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1.4142135623730951}, "src.data.read.read_household_survey": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 5, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.start_pipeline": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"src.data.read.get_asset_damage": {"tf": 1.4142135623730951}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.4142135623730951}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}}, "df": 3}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.subset_columns": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"src.data.read.read_household_survey": {"tf": 1.4142135623730951}, "src.model.initialize_model": {"tf": 1.4142135623730951}, "src.modules.households.duplicate_households": {"tf": 1.7320508075688772}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1.7320508075688772}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1.4142135623730951}, "src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}}, "df": 11}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.data.prepare.rename_other_columns": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}}, "df": 2}, "e": {"docs": {"src.data.prepare.rename_other_columns": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.modules.households.select_district": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.linear_regression": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.data.read.get_asset_damage": {"tf": 1.7320508075688772}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.modules.households.select_district": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}, "src.modules.households.calculate_exposure": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}, "src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}, "x": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "x": {"docs": {"src.data.prepare.prepare_asset_damage": {"tf": 1}, "src.data.read.read_asset_damage": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.write.get_outcomes": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.model.run_model": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.data.prepare.rename_assets_column": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"src.data.prepare.add_missing_columns": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"src.data.write.calculate_resilience": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.data.prepare.add_missing_columns": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"src.modules.households.adjust_assets_and_expenditure": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"src.model.initialize_model": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"src.model.initialize_model": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.data.read.read_asset_damage": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1}}, "df": 1}}, "n": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 4, "o": {"docs": {"src.modules.households.determine_affected": {"tf": 1}}, "df": 1, "t": {"docs": {"src.data.prepare.prepare_household_survey": {"tf": 1}, "src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}, "src.modules.households.set_vulnerability": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1.4142135623730951}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1.4142135623730951}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.model.initialize_model": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1}, "src.model.initialize_model": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.data.write.get_outcomes": {"tf": 1}, "src.data.write.find_poor": {"tf": 1.4142135623730951}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1.4142135623730951}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}, "src.model.initialize_model": {"tf": 1}, "src.modules.households.duplicate_households": {"tf": 1.4142135623730951}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 9}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.modules.households.calculate_average_productivity": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"src.data.prepare.add_is_rural_column": {"tf": 1}, "src.data.read.read_household_survey": {"tf": 1.4142135623730951}, "src.data.write.find_poor": {"tf": 1}, "src.model.initialize_model": {"tf": 1.4142135623730951}, "src.modules.households.duplicate_households": {"tf": 1.7320508075688772}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 2}, "src.modules.households.calculate_pml": {"tf": 1.4142135623730951}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 1.7320508075688772}, "src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}, "src.modules.optimize.run_optimization": {"tf": 1}}, "df": 14, "s": {"docs": {"src.data.write.add_columns": {"tf": 1.4142135623730951}, "src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1.4142135623730951}, "src.data.write.calculate_resilience": {"tf": 1.7320508075688772}, "src.model.initialize_model": {"tf": 1.4142135623730951}, "src.modules.households.duplicate_households": {"tf": 2.449489742783178}, "src.modules.households.calculate_average_productivity": {"tf": 1}, "src.modules.households.adjust_assets_and_expenditure": {"tf": 1}, "src.modules.households.calculate_pml": {"tf": 1}, "src.modules.households.select_district": {"tf": 1}, "src.modules.households.estimate_savings": {"tf": 1.4142135623730951}, "src.modules.households.set_vulnerability": {"tf": 1.4142135623730951}, "src.modules.households.calculate_exposure": {"tf": 1.4142135623730951}, "src.modules.households.determine_affected": {"tf": 2.23606797749979}, "src.modules.households.apply_individual_policy": {"tf": 1.4142135623730951}, "src.modules.optimize.run_optimization": {"tf": 1.7320508075688772}}, "df": 17}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.data.prepare.decode_housing_attributes": {"tf": 1}, "src.data.prepare.add_housing_attributes": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.model.initialize_model": {"tf": 1}, "src.modules.households.determine_affected": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.find_poor": {"tf": 1}, "src.data.write.get_people_by_years_in_poverty": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.data.read.get_asset_damage": {"tf": 1}, "src.data.write.calculate_poverty_gap": {"tf": 1}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1}, "src.data.write.calculate_resilience": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"src.modules.households.apply_individual_policy": {"tf": 1.7320508075688772}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"src.data.write.calculate_poverty_gap": {"tf": 1.7320508075688772}}, "df": 1}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"src.modules.households.estimate_savings": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"src.data.write.get_people_by_years_in_poverty": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"src.data.write.get_outcomes": {"tf": 1.4142135623730951}, "src.data.write.calculate_poverty_gap": {"tf": 1.4142135623730951}, "src.data.write.calculate_average_annual_consumption_loss": {"tf": 1.4142135623730951}, "src.modules.optimize.run_optimization": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "k": {"docs": {"src.modules.households.calculate_average_productivity": {"tf": 1}}, "df": 1}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();